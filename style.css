@font-face {
	font-family: 'Heebo';
	src: url(./fonts/Heebo-Light.woff2) format(woff2);
	font-weight: 300;
	font-style: normal;
	font-display: swap;
}
@font-face {
	font-family: 'Heebo';
	src: url(./fonts/Heebo-Bold.woff2) format(woff2);
	font-weight: 700;
	font-style: normal;
	font-display: swap;
}
@font-face {
	font-family: 'Yantramanav';
	src: url(./fonts/Yantramanav-Bold.woff2) format(woff2);
	font-weight: 700;
	font-style: normal;
	font-display: swap;
}
:root {
	--color-dark: #000;
	--color-light: #fff;
	--color-dark-alternate: #131619;
	--color-dark-gray: #404040;
	--color-light-gray: #c4c4c4;

	--border-radius: 30px;
	--border: 1px solid var(--color-light);

	--font-family-base: 'Heebo', sans-serif;
	--font-family-accent: 'Yantramanav', sans-serif;

	--input-height: 54px;
	--container-width: 1300px;
	--container-padding-x: 15px;
	--transition-duration: 0.2s;
	--header-height: 90px;
}
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
	box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
	padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
	margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
	margin-block: 0;
}
.title-medium {
	font-size: clamp(20px, 2.08vw, 40px);
	line-height: 1.3;
	color: var(--color-light);
}
:where(dd[class]) {
	margin-left: 0;
}

:where(fieldset[class]) {
	margin-left: 0;
	padding: 0;
	border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
	list-style: none;
}

:where(address[class]) {
	font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
	--paragraphMarginBottom: 24px;

	margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
	margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
	display: block;
	max-width: 100%;
	/* height: auto; */
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
	font: inherit;
}

html {
	/**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
	height: 100%;
	/**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
	scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
	scroll-behavior: smooth;
}

body {
	/**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
	min-height: 100%;
	/**
    Унифицированный интерлиньяж
   */
	line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
	display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
	cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill='none'], [fill^='url'])) {
	fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke='none'], [stroke^='url'])) {
	stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
	transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
	border-collapse: collapse;
	border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
	*,
	::before,
	::after {
		animation-duration: 0.01ms !important;
		animation-iteration-count: 1 !important;
		transition-duration: 0.01ms !important;
		scroll-behavior: auto !important;
	}
}
.backdrop-title {
	position: relative;
	z-index: 2;
}
.backdrop-title::before {
	content: '';
	display: block;
	width: 26px;
	aspect-ratio: 1;
	background: url(./icons/plus.svg) center/contain no-repeat;
	position: absolute;
	right: calc(100% + 8px);
}
.backdrop-title::after {
	content: attr(data-title);
	position: absolute;
	z-index: -1;
	top: -0.45em;
	left: -0.6em;
	font-family: var(--font-family-accent);
	font-size: 2.8em;
	color: transparent;
	-webkit-text-stroke: 1px var(--color-light-gray);
	text-stroke: 1px var(--color-light-gray);
}
body {
	background-color: var(--color-dark);
	font-family: var(--font-family-base);
	color: var(--color-light-gray);
	font-size: 16px;
	font-weight: 300;
	line-height: 1.75;
	border-color: var(--color-dark);
}
.container {
	max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
	margin-inline: auto;
	padding-inline: var(--container-padding-x);
}
p {
	margin-block: 0;
}
p:not([class]):not(:last-child) {
	margin-bottom: 24px;
}
a,
button,
input,
textarea,
svg * {
	transition-duration: var(--transition-duration);
}
h1,
h2,
h3,
h4,
h5,
h6 {
	font-weight: 700;
	text-transform: uppercase;
}
a {
	color: var(--color-light);
}
.header-logo {
	flex-shrink: 0;
}
.button {
	display: inline-flex;
	height: 38px;
	align-items: center;
	padding-inline: 26px;
	font-size: 12px;
	font-weight: 700;
	line-height: 2;
	letter-spacing: 1.2px;
	text-decoration: none;
	text-transform: uppercase;
	background-color: var(--color-light);
	border: none;
	border-radius: var(--border-radius);
	white-space: nowrap;
	transition: 0.2s ease;
}
.button:hover {
	background-color: var(--color-light-gray);
}
.header-actions {
	display: flex;
	column-gap: 40px;
}
.header {
	display: flex;
	justify-content: space-between;
	align-items: center;
	column-gap: 20px;
	min-height: var(--header-height);
	padding-inline: 32px;
	background-color: var(--color-dark-alternate);
}

.header-menu-list {
	display: flex;
	column-gap: 50px;
	flex-wrap: wrap;
}
.header-menu-link {
	display: inline-flex;
	height: var(--header-height);
	align-items: center;
	text-decoration: none;
	text-transform: uppercase;
	font-weight: 700;
	font-size: 12px;
	letter-spacing: 1.2px;
	column-gap: 7px;
}
a:hover {
	color: var(--color-light-gray);
	transition: 0.2s ease;
}
.header-menu-link.is-current::after {
	content: '';
	width: 5px;
	aspect-ratio: 1;
	background-color: currentColor;
	border-radius: 50%;
}

.header-burger-button {
	display: inline-flex;
	justify-content: center;
	align-items: center;
	width: 40px;
	aspect-ratio: 1;
	color: var(--color-dark);
	border: var(--border);
	border-radius: 50%;
}
.header-burger-button:hover {
	transition: var(--transition-duration);
	background-color: var(--color-light-gray);
}

@media (max-width: 1919px) {
	.motivation-card-image {
		margin-block: -20px;
	}
}

@media (max-width: 1024px) {
	.header {
		flex-wrap: wrap;
		padding-top: 20px;
		row-gap: 10px;
		padding-inline: 15px;
	}
	.header-menu {
		order: 1;
		flex-basis: 100%;
	}
	.header-menu-link {
		height: 50px;
	}
	.banner {
		padding-inline: 15px;
		row-gap: 10px;
	}
	.motivation-card {
		padding-inline: 50px;
	}
	.motivation-card-image {
		max-width: 30%;
		height: auto;
		margin-block: 0;
	}
}
@media (max-width: 767px) {
	.button {
		padding-inline: 18px;
	}
	.header {
		padding-top: 10px;
	}
	.header-menu-list {
		column-gap: 24px;
	}
	.header-menu-link {
		height: 32px;
	}
	.header-actions {
		column-gap: 15px;
	}
	.banner-info {
		margin-bottom: 5px;
	}
	.banner-info::before {
		margin-right: 10px;
	}
	.motivation-card,
	.motivation-item:nth-child(even) .motivation-card {
		flex-direction: column-reverse;
	}
	.motivation-card {
		row-gap: 30px;
		padding-block: 30px;
	}
	.motivation-card-description:not(:last-child) {
		margin-bottom: 20px;
	}
	.motivation-card-image {
		max-width: 60%;
	}
}

.button.transparent {
	position: relative;
	height: var(--input-height);
	padding-left: 31px;
	background-color: transparent;
	padding-right: 80px;
	border: var(--border);
}
.button.transparent::after {
	content: '';
	height: 100%;
	position: absolute;
	right: 0px;
	aspect-ratio: 1;
	background: url(./icons/arrow-top-right.svg) center/70% no-repeat;
	border: var(--border);
	border-radius: 50%;
}
.button.transparent:hover {
	color: var(--color-dark);
	background-color: var(--color-light-gray);
}
.visually-hidden {
	position: absolute !important;
	width: 1px !important;
	height: 1px !important;
	margin: -1px !important;
	border: 0 !important;
	padding: 0 !important;
	white-space: nowrap !important;
	clip-path: inset(100%) !important;
	clip: rect(0 0 0 0) !important;
	overflow: hidden !important;
}

.banner {
	display: flex;
	flex-direction: column;
	justify-content: end;
	min-height: calc(100vh - var(--header-height));
	padding: 36px 70px;
	color: var(--color-light-gray);
	background-color: var(--color-dark-alternate);
}
.banner-body {
	text-transform: uppercase;
}
.banner-info {
	display: flex;
	align-items: end;
	font-size: clamp(16px, 1.56vw, 30px);
	line-height: 1.27;
	font-weight: 700;
}
.banner-info::before {
	content: '';
	width: clamp(60px, 10vw, 194px);
	aspect-ratio: 1;
	margin-right: 30px;
	background: url(./icons/bold-arrow-down-right.svg) center/contain no-repeat;
}
.banner-title {
	font-size: min(18.75vw, 360px);
	line-height: 1;
	font-weight: 700;
}
.banner-pagination {
	display: flex;
	justify-content: center;
}
.banner-pagination-list {
	display: flex;
	column-gap: 14px;
}
.banner-pagination-item {
	display: flex;
}
.banner-pagination-button {
	width: 10px;
	aspect-ratio: 1;
	padding: 0;
	background-color: transparent;
	border: var(--border);
	border-radius: 50%;
}
.banner-pagination-button.is-current {
	background-color: var(--color-light);
}

.motivation-item:nth-child(even) {
	background-color: var(--color-dark-alternate);
}
.motivation-item:nth-child(even) .motivation-card {
	flex-direction: row-reverse;
}
.motivation-card {
	display: flex;
	justify-content: start;
	align-items: center;
	column-gap: clamp(30px, 10.42vw, 200px);
}
.motivation-card-image {
	margin-block: -60px;
}
.motivation-card-body {
	padding-left: 35px;
}

.motivation-card-description {
	max-width: 400px;
}
.motivation-card-description:not(:last-child) {
	margin-bottom: 37px;
}

.motivation-card-title:not(:last-child) {
	margin-bottom: 14px;
}
